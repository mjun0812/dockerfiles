name: Deploy CUDA Python Docker Image
on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cuda: "12.1.1"
            cuda_short: "1211"
            python: "3.11.7"
            python_short: "311"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "12.1.1"
            cuda_short: "1211"
            python: "3.11.7"
            python_short: "311"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.11.7"
            python_short: "311"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.11.7"
            python_short: "311"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.8.0"
            cuda_short: "1180"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.7.1"
            cuda_short: "1171"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.7.1"
            cuda_short: "1171"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "22.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.6.2"
            cuda_short: "1162"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.6.2"
            cuda_short: "1162"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.3.1"
            cuda_short: "1131"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.3.1"
            cuda_short: "1131"
            python: "3.10.13"
            python_short: "310"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "11.3.1"
            cuda_short: "1131"
            python: "3.8.16"
            python_short: "38"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "11.3.1"
            cuda_short: "1131"
            python: "3.8.16"
            python_short: "38"
            ubuntu: "20.04"
            cudnn: "8"
            flavor: "runtime"

          - cuda: "10.2"
            cuda_short: "102"
            python: "3.8.16"
            python_short: "38"
            ubuntu: "18.04"
            cudnn: "8"
            flavor: "devel"
          - cuda: "10.2"
            cuda_short: "102"
            python: "3.8.16"
            python_short: "38"
            ubuntu: "18.04"
            cudnn: "8"
            flavor: "runtime"

    steps:
      - name: Maximize build space
        run: |
          df -h
          echo "\n\n"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          df -h
          echo "\n\n"

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "./cuda_python/"
          build-args: |
            PYTHON=${{ matrix.python }}
            CUDA_VERSION=${{ matrix.cuda }}
            BASE_IMAGE=nvcr.io/nvidia/cuda:${{ matrix.cuda }}-cudnn${{ matrix.cudnn }}-${{ matrix.flavor }}-ubuntu${{ matrix.ubuntu }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/mjun0812/cuda${{ matrix.cuda_short }}-python${{ matrix.python_short }}-${{ matrix.flavor }}-server:latest
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.cuda }}-${{ matrix.python }}-${{ matrix.flavor }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.cuda }}-${{ matrix.python }}-${{ matrix.flavor }}
