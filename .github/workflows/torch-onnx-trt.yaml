name: Deploy CUDA Python PyTorch ONNX TensorRT Docker Image
on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - BASE_IMAGE: "nvcr.io/nvidia/tensorrt:24.02-py3"
            TENSOR_RT_OSS_VERSION: "v9.3.0"
            PYCUDA_VERSION: "2024.1"
            # ONNX
            ONNX_VERSION: "1.15.0"
            ONNXRUNTIME_VERSION: "v1.17.1"
            ONNX_TENSORRT_TAG: "release/8.6-GA"
            # PyTorch
            TORCH_VERSION: "2.2.1"
            TORCHVISION_VERSION: "0.17.1"
            TORCH_TENSORRT_VERSION: "2.2.0"
            tags: ghcr.io/mjun0812/torch-onnx1150-1171-trt-server
    steps:
      - name: Maximize build space
        run: |
          df -h
          echo "\n\n"
          sudo rm -rf /opt/*
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/julia*
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/share/kotlinc
          sudo rm -rf /usr/local/share/edge_driver
          sudo rm -rf /usr/local/share/chromedriver-linux64
          sudo rm -rf /usr/local/share/gecko_driver
          sudo rm -rf /usr/share/miniconda
          sudo rm -rf /usr/local/share/phantomjs*
          sudo rm -rf /usr/share/sbt
          sudo rm -rf /usr/local/sqlpackage
          sudo docker image prune --all --force
          sudo npm uninstall bazel
          sudo apt purge \
            ansible \
            apache2 \
            aria2 \
            azure-cli \
            cabal* \
            clang* \
            dotnet-sdk* \
            firefox \
            ghc* \
            google-chrome-stable \
            kubectl \
            libpq-dev \
            microsoft-edge-stable \
            moby-buildx \
            moby-cli \
            moby-compose \
            moby-engine \
            mongodb* \
            mono-complete \
            mysql* \
            nginx \
            node* \
            npm* \
            nuget \
            php* \
            postgresql* \
            powershell \
            r-base \
            rpm \
            ruby* \
            sphinxsearch \
            subversion \
            yarn \
            -y
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          df -h

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "./torch-onnx-trt/"
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            TENSOR_RT_OSS_VERSION=${{ matrix.TENSOR_RT_OSS_VERSION }}
            PYCUDA_VERSION=${{ matrix.PYCUDA_VERSION }}
            ONNX_VERSION=${{ matrix.ONNX_VERSION }}
            ONNXRUNTIME_VERSION=${{ matrix.ONNXRUNTIME_VERSION }}
            ONNX_TENSORRT_TAG=${{ matrix.ONNX_TENSORRT_TAG }}
            TORCH_VERSION=${{ matrix.TORCH_VERSION }}
            TORCHVISION_VERSION=${{ matrix.TORCHVISION_VERSION }}
            TORCH_TENSORRT_VERSION=${{ matrix.TORCH_TENSORRT_VERSION }}
          push: true
          platforms: linux/amd64
          tags: ${{ matrix.tags }}
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.tags }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.tags }}
